#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x650a957eb8e0 .scope module, "G0601a" "G0601a" 2 33;
 .timescale 0 0;
v0x650a95827c10_0 .var/i "i", 31 0;
v0x650a95827cf0_0 .net "r", 0 0, L_0x650a9582c060;  1 drivers
v0x650a95827db0_0 .var "x", 0 0;
v0x650a95827e50_0 .var "y", 0 0;
v0x650a95827ef0_0 .var "z", 0 0;
S_0x650a957f65b0 .scope module, "F1" "f1" 2 42, 2 3 0, S_0x650a957eb8e0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "r";
    .port_info 1 /INPUT 1 "x";
    .port_info 2 /INPUT 1 "y";
    .port_info 3 /INPUT 1 "z";
L_0x650a9582bbc0 .functor AND 1, v0x650a95827db0_0, v0x650a95827e50_0, C4<1>, C4<1>;
L_0x650a9582bd00 .functor NOT 1, v0x650a95827db0_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582bd70 .functor NOT 1, v0x650a95827e50_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582bde0 .functor AND 1, L_0x650a9582bd00, L_0x650a9582bd70, C4<1>, C4<1>;
L_0x650a9582bf50 .functor AND 1, L_0x650a9582bde0, v0x650a95827ef0_0, C4<1>, C4<1>;
L_0x650a9582c060 .functor OR 1, L_0x650a9582bbc0, L_0x650a9582bf50, C4<0>, C4<0>;
v0x650a957e5e00_0 .net *"_ivl_0", 0 0, L_0x650a9582bbc0;  1 drivers
v0x650a95827330_0 .net *"_ivl_2", 0 0, L_0x650a9582bd00;  1 drivers
v0x650a95827410_0 .net *"_ivl_4", 0 0, L_0x650a9582bd70;  1 drivers
v0x650a958274d0_0 .net *"_ivl_6", 0 0, L_0x650a9582bde0;  1 drivers
v0x650a958275b0_0 .net *"_ivl_8", 0 0, L_0x650a9582bf50;  1 drivers
v0x650a958276e0_0 .net "r", 0 0, L_0x650a9582c060;  alias, 1 drivers
v0x650a958277a0_0 .net "x", 0 0, v0x650a95827db0_0;  1 drivers
v0x650a95827860_0 .net "y", 0 0, v0x650a95827e50_0;  1 drivers
v0x650a95827920_0 .net "z", 0 0, v0x650a95827ef0_0;  1 drivers
S_0x650a95827a60 .scope begin, "main" "main" 2 46, 2 46 0, S_0x650a957eb8e0;
 .timescale 0 0;
S_0x650a957eba70 .scope module, "G0601b" "G0601b" 2 65;
 .timescale 0 0;
v0x650a95828980_0 .var/i "i", 31 0;
v0x650a95828a60_0 .net "r", 0 0, L_0x650a9582c3d0;  1 drivers
v0x650a95828b20_0 .var "x", 0 0;
v0x650a95828c20_0 .var "y", 0 0;
v0x650a95828cf0_0 .var "z", 0 0;
S_0x650a95827fe0 .scope module, "F2" "f2" 2 74, 2 9 0, S_0x650a957eba70;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "r";
    .port_info 1 /INPUT 1 "x";
    .port_info 2 /INPUT 1 "y";
    .port_info 3 /INPUT 1 "z";
L_0x650a9582c200 .functor NOT 1, v0x650a95828cf0_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582c2c0 .functor OR 1, v0x650a95828b20_0, v0x650a95828c20_0, C4<0>, C4<0>;
L_0x650a9582c3d0 .functor AND 1, L_0x650a9582c200, L_0x650a9582c2c0, C4<1>, C4<1>;
v0x650a95828260_0 .net *"_ivl_0", 0 0, L_0x650a9582c200;  1 drivers
v0x650a95828300_0 .net *"_ivl_2", 0 0, L_0x650a9582c2c0;  1 drivers
v0x650a958283a0_0 .net "r", 0 0, L_0x650a9582c3d0;  alias, 1 drivers
v0x650a95828470_0 .net "x", 0 0, v0x650a95828b20_0;  1 drivers
v0x650a95828530_0 .net "y", 0 0, v0x650a95828c20_0;  1 drivers
v0x650a95828640_0 .net "z", 0 0, v0x650a95828cf0_0;  1 drivers
S_0x650a95828780 .scope begin, "main" "main" 2 78, 2 78 0, S_0x650a957eba70;
 .timescale 0 0;
S_0x650a957f0e50 .scope module, "G0601c" "G0601c" 2 97;
 .timescale 0 0;
v0x650a958295a0_0 .var/i "i", 31 0;
v0x650a95829680_0 .net "r", 0 0, L_0x650a9582c530;  1 drivers
v0x650a95829740_0 .var "x", 0 0;
v0x650a95829840_0 .var "y", 0 0;
v0x650a95829910_0 .var "z", 0 0;
S_0x650a95828de0 .scope module, "F3" "f3" 2 106, 2 15 0, S_0x650a957f0e50;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "r";
    .port_info 1 /INPUT 1 "x";
    .port_info 2 /INPUT 1 "y";
    .port_info 3 /INPUT 1 "z";
L_0x650a9582c530 .functor XOR 1, v0x650a95829840_0, v0x650a95829910_0, C4<0>, C4<0>;
v0x650a95829060_0 .net "r", 0 0, L_0x650a9582c530;  alias, 1 drivers
v0x650a95829100_0 .net "x", 0 0, v0x650a95829740_0;  1 drivers
v0x650a958291a0_0 .net "y", 0 0, v0x650a95829840_0;  1 drivers
v0x650a95829270_0 .net "z", 0 0, v0x650a95829910_0;  1 drivers
S_0x650a958293a0 .scope begin, "main" "main" 2 110, 2 110 0, S_0x650a957f0e50;
 .timescale 0 0;
S_0x650a957f0fe0 .scope module, "G0601d" "G0601d" 2 129;
 .timescale 0 0;
v0x650a9582a680_0 .var/i "i", 31 0;
v0x650a9582a760_0 .net "r", 0 0, L_0x650a9582cac0;  1 drivers
v0x650a9582a820_0 .var "x", 0 0;
v0x650a9582a920_0 .var "y", 0 0;
v0x650a9582a9f0_0 .var "z", 0 0;
S_0x650a95829a00 .scope module, "F4" "f4" 2 138, 2 21 0, S_0x650a957f0fe0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "r";
    .port_info 1 /INPUT 1 "x";
    .port_info 2 /INPUT 1 "y";
    .port_info 3 /INPUT 1 "z";
L_0x650a9582c690 .functor NOT 1, v0x650a9582a920_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582c750 .functor AND 1, v0x650a9582a820_0, L_0x650a9582c690, C4<1>, C4<1>;
L_0x650a9582c880 .functor NOT 1, v0x650a9582a820_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582c8f0 .functor XOR 1, v0x650a9582a920_0, v0x650a9582a9f0_0, C4<0>, C4<0>;
L_0x650a9582c9b0 .functor AND 1, L_0x650a9582c880, L_0x650a9582c8f0, C4<1>, C4<1>;
L_0x650a9582cac0 .functor OR 1, L_0x650a9582c750, L_0x650a9582c9b0, C4<0>, C4<0>;
v0x650a95829c80_0 .net *"_ivl_0", 0 0, L_0x650a9582c690;  1 drivers
v0x650a95829d20_0 .net *"_ivl_2", 0 0, L_0x650a9582c750;  1 drivers
v0x650a95829dc0_0 .net *"_ivl_4", 0 0, L_0x650a9582c880;  1 drivers
v0x650a95829eb0_0 .net *"_ivl_6", 0 0, L_0x650a9582c8f0;  1 drivers
v0x650a95829f90_0 .net *"_ivl_8", 0 0, L_0x650a9582c9b0;  1 drivers
v0x650a9582a0c0_0 .net "r", 0 0, L_0x650a9582cac0;  alias, 1 drivers
v0x650a9582a180_0 .net "x", 0 0, v0x650a9582a820_0;  1 drivers
v0x650a9582a240_0 .net "y", 0 0, v0x650a9582a920_0;  1 drivers
v0x650a9582a300_0 .net "z", 0 0, v0x650a9582a9f0_0;  1 drivers
S_0x650a9582a4d0 .scope begin, "main" "main" 2 142, 2 142 0, S_0x650a957f0fe0;
 .timescale 0 0;
S_0x650a957f63d0 .scope module, "G0601e" "G0601e" 2 161;
 .timescale 0 0;
v0x650a9582b760_0 .var/i "i", 31 0;
v0x650a9582b840_0 .net "r", 0 0, L_0x650a9582d090;  1 drivers
v0x650a9582b900_0 .var "x", 0 0;
v0x650a9582ba00_0 .var "y", 0 0;
v0x650a9582bad0_0 .var "z", 0 0;
S_0x650a9582aae0 .scope module, "F5" "f5" 2 170, 2 27 0, S_0x650a957f63d0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "r";
    .port_info 1 /INPUT 1 "x";
    .port_info 2 /INPUT 1 "y";
    .port_info 3 /INPUT 1 "z";
L_0x650a9582cc60 .functor AND 1, v0x650a9582b900_0, v0x650a9582ba00_0, C4<1>, C4<1>;
L_0x650a9582cd70 .functor NOT 1, v0x650a9582b900_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582ce00 .functor NOT 1, v0x650a9582ba00_0, C4<0>, C4<0>, C4<0>;
L_0x650a9582ce70 .functor XOR 1, L_0x650a9582ce00, v0x650a9582bad0_0, C4<0>, C4<0>;
L_0x650a9582cf80 .functor AND 1, L_0x650a9582cd70, L_0x650a9582ce70, C4<1>, C4<1>;
L_0x650a9582d090 .functor OR 1, L_0x650a9582cc60, L_0x650a9582cf80, C4<0>, C4<0>;
v0x650a9582ad60_0 .net *"_ivl_0", 0 0, L_0x650a9582cc60;  1 drivers
v0x650a9582ae00_0 .net *"_ivl_2", 0 0, L_0x650a9582cd70;  1 drivers
v0x650a9582aea0_0 .net *"_ivl_4", 0 0, L_0x650a9582ce00;  1 drivers
v0x650a9582af90_0 .net *"_ivl_6", 0 0, L_0x650a9582ce70;  1 drivers
v0x650a9582b070_0 .net *"_ivl_8", 0 0, L_0x650a9582cf80;  1 drivers
v0x650a9582b1a0_0 .net "r", 0 0, L_0x650a9582d090;  alias, 1 drivers
v0x650a9582b260_0 .net "x", 0 0, v0x650a9582b900_0;  1 drivers
v0x650a9582b320_0 .net "y", 0 0, v0x650a9582ba00_0;  1 drivers
v0x650a9582b3e0_0 .net "z", 0 0, v0x650a9582bad0_0;  1 drivers
S_0x650a9582b5b0 .scope begin, "main" "main" 2 174, 2 174 0, S_0x650a957f63d0;
 .timescale 0 0;
    .scope S_0x650a957eb8e0;
T_0 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827db0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    %end;
    .thread T_0;
    .scope S_0x650a957eb8e0;
T_1 ;
    %fork t_1, S_0x650a95827a60;
    %jmp t_0;
    .scope S_0x650a95827a60;
t_1 ;
    %vpi_call 2 48 "$display", "\012G0601a -\012" {0 0 0};
    %vpi_call 2 50 "$display", "f(x,y,z) = m (1,6,7)\012" {0 0 0};
    %vpi_call 2 52 "$monitor", "#%0d | %b %b %b | %b", v0x650a95827c10_0, v0x650a95827db0_0, v0x650a95827e50_0, v0x650a95827ef0_0, v0x650a95827cf0_0 {0 0 0};
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827db0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827db0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827db0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827db0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827e50_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95827ef0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95827c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95827c10_0, 0, 32;
    %end;
    .scope S_0x650a957eb8e0;
t_0 %join;
    %end;
    .thread T_1;
    .scope S_0x650a957eba70;
T_2 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828b20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    %end;
    .thread T_2;
    .scope S_0x650a957eba70;
T_3 ;
    %fork t_3, S_0x650a95828780;
    %jmp t_2;
    .scope S_0x650a95828780;
t_3 ;
    %delay 15, 0;
    %vpi_call 2 80 "$display", "\012G0601b -\012" {0 0 0};
    %vpi_call 2 82 "$display", "f(x,y,z) = m (2,4,6)\012" {0 0 0};
    %vpi_call 2 84 "$monitor", "#%0d | %b %b %b | %b", v0x650a95828980_0, v0x650a95828b20_0, v0x650a95828c20_0, v0x650a95828cf0_0, v0x650a95828a60_0 {0 0 0};
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828b20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828b20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828b20_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828b20_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828c20_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95828cf0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a95828980_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a95828980_0, 0, 32;
    %end;
    .scope S_0x650a957eba70;
t_2 %join;
    %end;
    .thread T_3;
    .scope S_0x650a957f0e50;
T_4 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829740_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    %end;
    .thread T_4;
    .scope S_0x650a957f0e50;
T_5 ;
    %fork t_5, S_0x650a958293a0;
    %jmp t_4;
    .scope S_0x650a958293a0;
t_5 ;
    %delay 25, 0;
    %vpi_call 2 112 "$display", "\012G0601c -\012" {0 0 0};
    %vpi_call 2 114 "$display", "f(x,y,z) = m (1,2,5,6)\012" {0 0 0};
    %vpi_call 2 116 "$monitor", "#%0d | %b %b %b | %b", v0x650a958295a0_0, v0x650a95829740_0, v0x650a95829840_0, v0x650a95829910_0, v0x650a95829680_0 {0 0 0};
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829740_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829740_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829740_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829740_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829840_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a95829910_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a958295a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a958295a0_0, 0, 32;
    %end;
    .scope S_0x650a957f0e50;
t_4 %join;
    %end;
    .thread T_5;
    .scope S_0x650a957f0fe0;
T_6 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a820_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    %end;
    .thread T_6;
    .scope S_0x650a957f0fe0;
T_7 ;
    %fork t_7, S_0x650a9582a4d0;
    %jmp t_6;
    .scope S_0x650a9582a4d0;
t_7 ;
    %delay 35, 0;
    %vpi_call 2 144 "$display", "\012G0601d -\012" {0 0 0};
    %vpi_call 2 146 "$display", "f(x,y,z) = m (1,2,4,5)\012" {0 0 0};
    %vpi_call 2 148 "$monitor", "#%0d | %b %b %b | %b", v0x650a9582a680_0, v0x650a9582a820_0, v0x650a9582a920_0, v0x650a9582a9f0_0, v0x650a9582a760_0 {0 0 0};
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a820_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a820_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a820_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a820_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a920_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582a9f0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582a680_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582a680_0, 0, 32;
    %end;
    .scope S_0x650a957f0fe0;
t_6 %join;
    %end;
    .thread T_7;
    .scope S_0x650a957f63d0;
T_8 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582b900_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    %end;
    .thread T_8;
    .scope S_0x650a957f63d0;
T_9 ;
    %fork t_9, S_0x650a9582b5b0;
    %jmp t_8;
    .scope S_0x650a9582b5b0;
t_9 ;
    %delay 45, 0;
    %vpi_call 2 176 "$display", "\012G0601e -\012" {0 0 0};
    %vpi_call 2 178 "$display", "f(x,y,z) = m (0,3,6,7)\012" {0 0 0};
    %vpi_call 2 180 "$monitor", "#%0d | %b %b %b | %b", v0x650a9582b760_0, v0x650a9582b900_0, v0x650a9582ba00_0, v0x650a9582bad0_0, v0x650a9582b840_0 {0 0 0};
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582b900_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582b900_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582b900_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %delay 1, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582b900_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582ba00_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x650a9582bad0_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x650a9582b760_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x650a9582b760_0, 0, 32;
    %end;
    .scope S_0x650a957f63d0;
t_8 %join;
    %end;
    .thread T_9;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "G0601.v";
